{"ast":null,"code":"var _jsxFileName = \"/Users/nmonett1/CS/GitHub/portfolio/src/components/projectCard.jsx\";\nimport React from 'react'; // code written entirely by GPT\nimport { Grid, Paper, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectCard = _ref => {\n  let {\n    imageSrc,\n    title,\n    description\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageSrc,\n            alt: title,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["React","Grid","Paper","Typography","jsxDEV","_jsxDEV","ProjectCard","_ref","imageSrc","title","description","item","xs","sm","md","children","sx","p","container","spacing","src","alt","style","width","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","$RefreshReg$"],"sources":["/Users/nmonett1/CS/GitHub/portfolio/src/components/projectCard.jsx"],"sourcesContent":["import React from 'react'; // code written entirely by GPT\nimport { Grid, Paper, Typography } from '@mui/material';\n\nconst ProjectCard = ({ imageSrc, title, description }) => {\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Paper sx={{ p: 2 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6}>\n            <img src={imageSrc} alt={title} style={{ width: '100%' }} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\">{title}</Typography>\n            <Typography variant=\"body2\">{description}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default ProjectCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,SAASC,IAAI,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,WAAW,GAAGC,IAAA,IAAsC;EAAA,IAArC;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAAH,IAAA;EACnD,oBACEF,OAAA,CAACJ,IAAI;IAACU,IAAI;IAACC,EAAE,EAAE,EAAG;IAACC,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAAAC,QAAA,eAC9BV,OAAA,CAACH,KAAK;MAACc,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAE,CAAE;MAAAF,QAAA,eAClBV,OAAA,CAACJ,IAAI;QAACiB,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAJ,QAAA,gBACzBV,OAAA,CAACJ,IAAI;UAACU,IAAI;UAACC,EAAE,EAAE,EAAG;UAACE,EAAE,EAAE,CAAE;UAAAC,QAAA,eACvBV,OAAA;YAAKe,GAAG,EAAEZ,QAAS;YAACa,GAAG,EAAEZ,KAAM;YAACa,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAO;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,eACPtB,OAAA,CAACJ,IAAI;UAACU,IAAI;UAACC,EAAE,EAAE,EAAG;UAACE,EAAE,EAAE,CAAE;UAAAC,QAAA,gBACvBV,OAAA,CAACF,UAAU;YAACyB,OAAO,EAAC,IAAI;YAAAb,QAAA,EAAEN;UAAK;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAC7CtB,OAAA,CAACF,UAAU;YAACyB,OAAO,EAAC,OAAO;YAAAb,QAAA,EAAEL;UAAW;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX,CAAC;AAACE,EAAA,GAhBIvB,WAAW;AAkBjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}